<?xml version="1.0" encoding="UTF-8" ?>
<class name="SplitContainer" inherits="Container" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		A container that arranges child controls horizontally or vertically and provides grabbers for adjusting the split ratios between them.
	</brief_description>
	<description>
		A container that arranges child controls horizontally or vertically and creates divisors between them. The divisors can be dragged around to change the size relations between the child controls.
	</description>
	<tutorials>
		<link title="Using Containers">$DOCS_URL/tutorials/ui/gui_containers.html</link>
	</tutorials>
	<methods>
		<method name="clamp_split_offset">
			<return type="void" />
			<description>
				Clamps the [member split_offsets] values to not go outside the possible minimum and maximum values, and to not overlap with each other.
			</description>
		</method>
	</methods>
	<members>
		<member name="collapsed" type="bool" setter="set_collapsed" getter="is_collapsed" default="false">
			If [code]true[/code], the [Control] nodes will be set to their default positions (as if all [member split_offsets] were set to [code]0[/code]) and the draggers are disabled.
		</member>
		<member name="dragger_visibility" type="int" setter="set_dragger_visibility" getter="get_dragger_visibility" enum="SplitContainer.DraggerVisibility" default="0">
			Determines the dragger's visibility. See [enum DraggerVisibility] for details.
		</member>
		<member name="split_offset" type="int" setter="set_split_offset" getter="get_split_offset" default="0">
			The first element of [member split_offsets].
		</member>
		<member name="split_offsets" type="PackedInt32Array" setter="set_split_offsets" getter="get_split_offsets" default="PackedInt32Array(0)">
			Offsets for each dragger in pixels. Each one is the offset of the split between the [Control] nodes before and after the dragger, with [code]0[/code] being the default position. The default position is based on the [Control] nodes expand flags and minimum sizes. See [member Control.size_flags_horizontal], [member Control.size_flags_vertical], and [member Control.size_flags_stretch_ratio].
			If none of the [Control] nodes before the dragger are expanded, the default position will be at the start of the [SplitContainer]. If none of the [Control] nodes after the dragger are expanded, the default position will be at the end of the [SplitContainer]. If the dragger is in between expanded [Control] nodes, the default position will be in the middle, based on the [member Control.size_flags_stretch_ratio]s and minimum sizes.
			[b]Note:[/b] If the split offsets cause [Control] nodes to overlap, the first split will take priority when resolving the positions.
		</member>
		<member name="vertical" type="bool" setter="set_vertical" getter="is_vertical" default="false">
			If [code]true[/code], the [SplitContainer] will arrange its children vertically, rather than horizontally.
			Can't be changed when using [HSplitContainer] and [VSplitContainer].
		</member>
	</members>
	<signals>
		<signal name="dragged">
			<param index="0" name="offset" type="int" />
			<description>
				Emitted when any dragger is dragged by user.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="DRAGGER_VISIBLE" value="0" enum="DraggerVisibility">
			The split draggers are visible when the cursor hovers them.
		</constant>
		<constant name="DRAGGER_HIDDEN" value="1" enum="DraggerVisibility">
			The split draggers are never visible.
		</constant>
		<constant name="DRAGGER_HIDDEN_COLLAPSED" value="2" enum="DraggerVisibility">
			The split draggers are never visible and are collapsed.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="autohide" data_type="constant" type="int" default="1">
			Boolean value. If [code]1[/code] ([code]true[/code]), the grabbers will hide automatically when they aren't under the cursor. If [code]0[/code] ([code]false[/code]), The grabbers are always visible.
		</theme_item>
		<theme_item name="minimum_grab_thickness" data_type="constant" type="int" default="6">
			The minimum thickness of the area users can click on to grab the splitting line. If [theme_item separation] or [theme_item h_grabber] / [theme_item v_grabber]'s thickness are too small, this ensures that the splitting line can still be dragged.
		</theme_item>
		<theme_item name="separation" data_type="constant" type="int" default="12">
			The size of the space in between the child [Control] nodes.
		</theme_item>
		<theme_item name="grabber" data_type="icon" type="Texture2D">
			The icon used for the grabbers drawn in the separations.
		</theme_item>
		<theme_item name="h_grabber" data_type="icon" type="Texture2D">
			The icon used for the grabbers drawn in the separations when [member vertical] is [code]false[/code].
		</theme_item>
		<theme_item name="v_grabber" data_type="icon" type="Texture2D">
			The icon used for the grabbers drawn in the separations when [member vertical] is [code]true[/code].
		</theme_item>
	</theme_items>
</class>
